---
# Task Manager ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: task-manager-config
  namespace: task-scheduler
data:
  config.toml: |
    [server]
    grpc_address = "0.0.0.0:50051"
    metrics_address = "0.0.0.0:9000"
    tls_enabled = false
    max_concurrent_requests = 1000
    
    [storage]
    type = "postgres"
    url = "postgresql://task_user:task_password_change_me@postgres.task-scheduler.svc.cluster.local:5432/task_scheduler"
    max_connections = 10
    run_migrations = true
    
    [queue]
    nats_url = "nats://nats.task-scheduler.svc.cluster.local:4222"
    jetstream_enabled = true
    queue_prefix = "tasks"
    
    [kubernetes]
    namespace = "task-scheduler"
    enabled = true
    
    [observability]
    tracing_enabled = true
    otlp_endpoint = "http://jaeger.task-scheduler.svc.cluster.local:4317"
    service_name = "task-manager"
    log_level = "info"
    sampling_ratio = 1.0
---
# Task Manager Service
apiVersion: v1
kind: Service
metadata:
  name: task-manager
  namespace: task-scheduler
  labels:
    app: task-manager
    component: control-plane
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
  - name: metrics
    port: 9000
    targetPort: 9000
    protocol: TCP
  selector:
    app: task-manager
---
# Task Manager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-manager
  namespace: task-scheduler
  labels:
    app: task-manager
    component: control-plane
spec:
  replicas: 2
  selector:
    matchLabels:
      app: task-manager
  template:
    metadata:
      labels:
        app: task-manager
        component: control-plane
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: task-manager
      containers:
      - name: task-manager
        image: task-manager:latest
        imagePullPolicy: IfNotPresent
        args:
        - --config
        - /etc/task-manager/config.toml
        ports:
        - name: grpc
          containerPort: 50051
          protocol: TCP
        - name: metrics
          containerPort: 9000
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info,task_manager=debug"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: config
          mountPath: /etc/task-manager
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: task-manager-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - task-manager
              topologyKey: kubernetes.io/hostname
---
# HorizontalPodAutoscaler for Task Manager
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: task-manager-hpa
  namespace: task-scheduler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: task-manager
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# PodDisruptionBudget for Task Manager
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: task-manager-pdb
  namespace: task-scheduler
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: task-manager